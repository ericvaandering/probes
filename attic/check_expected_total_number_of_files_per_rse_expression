#!/usr/bin/env python
# Copyright 2012-2020 CERN
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Authors:
# - Donata Mielaikaite, <donata.mielaikaite@cern.ch>, 2020
# - Fernando Garzon, <oscar.fernando.garzon.miguez@cern.ch>, 2020

"""
Probe to check the number of expected files per rse.
"""

from __future__ import print_function

import sys
import traceback

from rucio.db.sqla import models
from rucio.db.sqla.constants import RuleState
from rucio.db.sqla.session import get_session
from sqlalchemy import func

from utils import common

probe_metrics = common.probe_metrics
# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if __name__ == '__main__':
    status = OK
    session = get_session()
    try:
        print('Number of expected files per RSE expression')
        query = (session.query(models.ReplicationRule.rse_expression,
                               func.sum(models.ReplicationRule.copies * models.DataIdentifier.length).label(
                                   'sum_length'))
                 .join(models.DataIdentifier, (models.ReplicationRule.name == models.DataIdentifier.name))
                 .filter(models.ReplicationRule.state != RuleState.OK)
                 .filter(models.DataIdentifier.length != models.ReplicationRule.locks_ok_cnt)
                 .filter(models.DataIdentifier.length != None)
                 .filter(models.ReplicationRule.locks_ok_cnt != None).group_by(models.ReplicationRule.rse_expression))
        results = query.all()
        for result in results:
            probe_metrics.gauge('expected_number_of_files.{rse_expression}').labels(rse_expression=result[0]).set(result[1])
    except:
        print(traceback.format_exc())
        sys.exit(UNKNOWN)
    sys.exit(OK)
